# -*- coding: utf-8 -*-
"""visualization.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10TaaaJEDvSnMosrP3z8dtMQ5-JWg3qTJ
"""

import matplotlib.pyplot as plt

def plot_metrics(metrics_dict):
    """
    Plot a comparison of model performance metrics.
    :param metrics_dict: Dictionary of model names and their respective metric dictionaries.
    """
    models = list(metrics_dict.keys())
    metrics = list(metrics_dict[models[0]].keys())

    for metric in metrics:
        values = [metrics_dict[model][metric] for model in models]

        plt.figure(figsize=(8, 5))
        plt.bar(models, values, color=['blue', 'green', 'red'])
        plt.title(f"{metric} Comparison")
        plt.ylabel(metric)
        plt.xlabel("Models")
        plt.ylim(0, 1)  # For metrics like accuracy, precision, recall
        plt.show()

if __name__ == "__main__":
    # Example usage
    sample_metrics = {
        "Random Forest": {"Accuracy": 0.85, "Precision": 0.80, "Recall": 0.78, "FPR": 0.15, "FNR": 0.22},
        "LSTM": {"Accuracy": 0.88, "Precision": 0.82, "Recall": 0.81, "FPR": 0.14, "FNR": 0.19},
        "KNN": {"Accuracy": 0.83, "Precision": 0.79, "Recall": 0.77, "FPR": 0.17, "FNR": 0.23}
    }
    plot_metrics(sample_metrics)